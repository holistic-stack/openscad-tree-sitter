==================
Basic 2D Primitives
==================

circle(r=5);
circle(d=10);
square(10);
square([10, 20]);
square(size=[10, 20], center=true);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (number))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (vector_expression
              (number)
              (number)))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (vector_expression
              (number)
              (number)))
          (argument
            (identifier)
            (boolean)))))))

==================
Polygon Primitive
==================

polygon([[0,0], [1,0], [1,1], [0,1]]);
polygon(points=[[0,0], [10,0], [10,10], [0,10]], paths=[[0,1,2,3]]);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (vector_expression
              (vector_expression
                (number)
                (number))
              (vector_expression
                (number)
                (number))
              (vector_expression
                (number)
                (number))
              (vector_expression
                (number)
                (number))))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (vector_expression
              (vector_expression
                (number)
                (number))
              (vector_expression
                (number)
                (number))
              (vector_expression
                (number)
                (number))
              (vector_expression
                (number)
                (number))))
          (argument
            (identifier)
            (vector_expression
              (vector_expression
                (number)
                (number)
                (number)
                (number)))))))))

==================
Text Primitive
==================

text("Hello");
text("World", size=10);
text("OpenSCAD", size=12, font="Arial", halign="center", valign="center");

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (string))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (string))
          (argument
            (identifier)
            (number))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (string))
          (argument
            (identifier)
            (number))
          (argument
            (identifier)
            (string))
          (argument
            (identifier)
            (string))
          (argument
            (identifier)
            (string)))))))

==================
Linear Extrude Basic
==================

linear_extrude(height=10) square(5);
linear_extrude(height=10, center=true) circle(5);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))))
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (number)))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))
          (argument
            (identifier)
            (boolean))))
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (number))))))))

==================
Linear Extrude Advanced
==================

linear_extrude(height=10, twist=90, slices=20) circle(5);
linear_extrude(height=15, scale=[2, 1], center=true) square([5, 10]);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))
          (argument
            (identifier)
            (number))
          (argument
            (identifier)
            (number))))
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (number)))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))
          (argument
            (identifier)
            (vector_expression
              (number)
              (number)))
          (argument
            (identifier)
            (boolean))))
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (vector_expression
                (number)
                (number)))))))))

==================
Rotate Extrude Basic
==================

rotate_extrude() translate([10,0,0]) square([2,8]);
rotate_extrude(angle=270) polygon([[0,0], [2,0], [1,3]]);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list)
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (vector_expression
                (number)
                (number)
                (number)))))
        (module_instantiation
          name: (identifier)
          arguments: (argument_list
            (arguments
              (argument
                (vector_expression
                  (number)
                  (number)))))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))))
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (vector_expression
                (vector_expression
                  (number)
                  (number))
                (vector_expression
                  (number)
                  (number))
                (vector_expression
                  (number)
                  (number))))))))))

==================
Rotate Extrude Advanced
==================

rotate_extrude(angle=180, convexity=2, $fn=100) {
    translate([20, 0, 0]) {
        circle(r=5);
    }
}

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (number))
          (argument
            (identifier)
            (number))
          (argument
            (special_variable)
            (number))))
      (block
        (statement
          (module_instantiation
            name: (identifier)
            arguments: (argument_list
              (arguments
                (argument
                  (vector_expression
                    (number)
                    (number)
                    (number)))))
            (block
              (statement
                (module_instantiation
                  name: (identifier)
                  arguments: (argument_list
                    (arguments
                      (argument
                        (identifier)
                        (number)))))))))))))

==================
Import Operations
==================

import("model.stl");
import("design.3mf", convexity=3);
import("mesh.off", convexity=5);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (string))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (string))
          (argument
            (identifier)
            (number))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (string))
          (argument
            (identifier)
            (number)))))))

==================
Surface Operation
==================

surface(file="heightmap.png", center=true, convexity=5);
surface("terrain.dat", center=false, invert=true);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (string))
          (argument
            (identifier)
            (boolean))
          (argument
            (identifier)
            (number))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (string))
          (argument
            (identifier)
            (boolean))
          (argument
            (identifier)
            (boolean)))))))

==================
Projection Operations
==================

projection(cut=true) cube(10);
projection(cut=false) rotate([45,0,0]) cube(10);
projection() cylinder(h=20, r=5);

---

(source_file
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (boolean))))
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (number)))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list
        (arguments
          (argument
            (identifier)
            (boolean))))
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (vector_expression
                (number)
                (number)
                (number)))))
        (module_instantiation
          name: (identifier)
          arguments: (argument_list
            (arguments
              (argument
                (number))))))))
  (statement
    (module_instantiation
      name: (identifier)
      arguments: (argument_list)
      (module_instantiation
        name: (identifier)
        arguments: (argument_list
          (arguments
            (argument
              (identifier)
              (number))
            (argument
              (identifier)
              (number))))))))
